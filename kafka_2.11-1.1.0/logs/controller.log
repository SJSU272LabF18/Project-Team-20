[2018-11-30 20:14:16,787] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2018-11-30 20:15:28,846] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2018-11-30 20:15:28,887] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2018-11-30 20:15:28,890] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2018-11-30 20:15:28,896] INFO [Controller id=0] Initialized controller epoch to 25 and zk version 24 (kafka.controller.KafkaController)
[2018-11-30 20:15:28,899] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2018-11-30 20:15:28,926] INFO [Controller id=0] Epoch incremented to 26 (kafka.controller.KafkaController)
[2018-11-30 20:15:28,926] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2018-11-30 20:15:28,931] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2018-11-30 20:15:28,935] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2018-11-30 20:15:28,941] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2018-11-30 20:15:29,030] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2018-11-30 20:15:29,090] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2018-11-30 20:15:29,129] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2018-11-30 20:15:29,138] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2018-11-30 20:15:29,143] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2018-11-30 20:15:29,147] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2018-11-30 20:15:29,157] INFO [Controller id=0] Current list of topics in the cluster: Set(post_signup, get_inbox, get_propertyphotos, get_transaction_history, get_dashboard, post_login, post_sendmessage, response_topic, get_home, post_book, get_propertydetails, post_buyproperty, get_searchresults, post_profile, post_ownerlogin, post_bookproperty, get_profile, post_lyp) (kafka.controller.KafkaController)
[2018-11-30 20:15:29,158] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2018-11-30 20:15:29,176] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2018-11-30 20:15:29,177] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2018-11-30 20:15:29,178] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2018-11-30 20:15:29,183] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2018-11-30 20:15:29,231] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2018-11-30 20:15:29,254] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.250.11.123:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2018-11-30 20:15:29,261] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2018-11-30 20:15:29,421] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=get_dashboard,Partition=0,Replica=0] -> OnlineReplica, [Topic=get_inbox,Partition=0,Replica=0] -> OnlineReplica, [Topic=get_propertydetails,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_sendmessage,Partition=0,Replica=0] -> OnlineReplica, [Topic=get_searchresults,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_bookproperty,Partition=0,Replica=0] -> OnlineReplica, [Topic=get_propertyphotos,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_lyp,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_buyproperty,Partition=0,Replica=0] -> OnlineReplica, [Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_login,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_profile,Partition=0,Replica=0] -> OnlineReplica, [Topic=get_profile,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_ownerlogin,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_book,Partition=0,Replica=0] -> OnlineReplica, [Topic=get_home,Partition=0,Replica=0] -> OnlineReplica, [Topic=get_transaction_history,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_signup,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2018-11-30 20:15:29,428] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2018-11-30 20:15:29,443] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2018-11-30 20:15:29,456] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(post_lyp-0 -> OnlinePartition, post_book-0 -> OnlinePartition, get_inbox-0 -> OnlinePartition, post_sendmessage-0 -> OnlinePartition, get_profile-0 -> OnlinePartition, get_home-0 -> OnlinePartition, post_signup-0 -> OnlinePartition, post_buyproperty-0 -> OnlinePartition, get_searchresults-0 -> OnlinePartition, get_dashboard-0 -> OnlinePartition, get_propertydetails-0 -> OnlinePartition, post_ownerlogin-0 -> OnlinePartition, post_login-0 -> OnlinePartition, get_transaction_history-0 -> OnlinePartition, get_propertyphotos-0 -> OnlinePartition, response_topic-0 -> OnlinePartition, post_profile-0 -> OnlinePartition, post_bookproperty-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2018-11-30 20:15:29,459] INFO [Controller id=0] Ready to serve as the new controller with epoch 26 (kafka.controller.KafkaController)
[2018-11-30 20:15:29,473] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2018-11-30 20:15:29,473] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2018-11-30 20:15:29,474] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2018-11-30 20:15:29,475] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2018-11-30 20:15:29,477] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2018-11-30 20:15:29,525] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2018-11-30 20:15:34,535] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-11-30 20:15:34,541] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_lyp-0 -> Vector(0), post_book-0 -> Vector(0), get_inbox-0 -> Vector(0), post_sendmessage-0 -> Vector(0), get_profile-0 -> Vector(0), get_home-0 -> Vector(0), post_signup-0 -> Vector(0), post_buyproperty-0 -> Vector(0), get_searchresults-0 -> Vector(0), get_dashboard-0 -> Vector(0), get_propertydetails-0 -> Vector(0), post_ownerlogin-0 -> Vector(0), post_login-0 -> Vector(0), get_transaction_history-0 -> Vector(0), get_propertyphotos-0 -> Vector(0), response_topic-0 -> Vector(0), post_profile-0 -> Vector(0), post_bookproperty-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-11-30 20:15:34,545] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-11-30 20:15:34,546] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-11-30 20:20:21,042] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-11-30 20:20:21,048] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_lyp-0 -> Vector(0), post_book-0 -> Vector(0), get_inbox-0 -> Vector(0), post_sendmessage-0 -> Vector(0), get_profile-0 -> Vector(0), get_home-0 -> Vector(0), post_signup-0 -> Vector(0), post_buyproperty-0 -> Vector(0), get_searchresults-0 -> Vector(0), get_dashboard-0 -> Vector(0), get_propertydetails-0 -> Vector(0), post_ownerlogin-0 -> Vector(0), post_login-0 -> Vector(0), get_transaction_history-0 -> Vector(0), get_propertyphotos-0 -> Vector(0), response_topic-0 -> Vector(0), post_profile-0 -> Vector(0), post_bookproperty-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-11-30 20:20:21,049] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-11-30 20:20:21,049] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-11-30 20:25:21,066] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-11-30 20:25:21,074] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_lyp-0 -> Vector(0), post_book-0 -> Vector(0), get_inbox-0 -> Vector(0), post_sendmessage-0 -> Vector(0), get_profile-0 -> Vector(0), get_home-0 -> Vector(0), post_signup-0 -> Vector(0), post_buyproperty-0 -> Vector(0), get_searchresults-0 -> Vector(0), get_dashboard-0 -> Vector(0), get_propertydetails-0 -> Vector(0), post_ownerlogin-0 -> Vector(0), post_login-0 -> Vector(0), get_transaction_history-0 -> Vector(0), get_propertyphotos-0 -> Vector(0), response_topic-0 -> Vector(0), post_profile-0 -> Vector(0), post_bookproperty-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-11-30 20:25:21,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-11-30 20:25:21,075] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
